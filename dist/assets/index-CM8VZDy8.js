(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const l of t.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function o(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=o(e);fetch(e.href,t)}})();const c=document.getElementById("connectWalletButton"),i=document.getElementById("disconnectWalletButton"),a=document.getElementById("walletAddress"),d=document.getElementById("walletBalance");c.addEventListener("click",async()=>{if(typeof window.ethereum<"u")try{const n=new ethers.providers.Web3Provider(window.ethereum);await n.send("eth_requestAccounts",[]);const o=await n.getSigner().getAddress();a.innerText=`${o}`;const r=await n.getBalance(o);d.innerText=`Balance: ${ethers.utils.formatEther(r)} ETH`;const e=`${o}`,t=y(e);c.style.display="none",i.style.display="inline-block"}catch(n){console.error(n.message)}else alert("Please install MetaMask or any Ethereum wallet!")});function u(){a.innerText="",d.innerText="",c.style.display="inline-block",i.style.display="none"}i.addEventListener("click",u);const f=new ethers.providers.CloudflareProvider;async function y(n){const s="0x00000000000C2e074eCc679009DA471295Ce7297",o=new ethers.Contract(s,ENSResolverABI,f);try{const r=await o.name(n);console.log(r)}catch(r){console.error("Error resolving ENS name:",r)}}
